// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: internal/pkg/pb/lesson/lesson.proto

package lesson

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CaseWithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	Input    string `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	Output   string `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *CaseWithID) Reset() {
	*x = CaseWithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseWithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseWithID) ProtoMessage() {}

func (x *CaseWithID) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseWithID.ProtoReflect.Descriptor instead.
func (*CaseWithID) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{0}
}

func (x *CaseWithID) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *CaseWithID) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *CaseWithID) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type Case struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input  string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output string `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *Case) Reset() {
	*x = Case{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Case) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Case) ProtoMessage() {}

func (x *Case) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Case.ProtoReflect.Descriptor instead.
func (*Case) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{1}
}

func (x *Case) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Case) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type ListLessonsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId string `protobuf:"bytes,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *ListLessonsRequest) Reset() {
	*x = ListLessonsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLessonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLessonsRequest) ProtoMessage() {}

func (x *ListLessonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLessonsRequest.ProtoReflect.Descriptor instead.
func (*ListLessonsRequest) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{2}
}

func (x *ListLessonsRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

type ListLessonsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId         string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId       string  `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	SequenceNumber int64   `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Title          string  `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Introduction   string  `protobuf:"bytes,6,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Body           string  `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	DefaultCode    string  `protobuf:"bytes,8,opt,name=default_code,json=defaultCode,proto3" json:"default_code,omitempty"`
	AnswerCode     string  `protobuf:"bytes,9,opt,name=answer_code,json=answerCode,proto3" json:"answer_code,omitempty"`
	TestCase       []*Case `protobuf:"bytes,10,rep,name=test_case,json=testCase,proto3" json:"test_case,omitempty"`
	Language       string  `protobuf:"bytes,11,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ListLessonsReply) Reset() {
	*x = ListLessonsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLessonsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLessonsReply) ProtoMessage() {}

func (x *ListLessonsReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLessonsReply.ProtoReflect.Descriptor instead.
func (*ListLessonsReply) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{3}
}

func (x *ListLessonsReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListLessonsReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListLessonsReply) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ListLessonsReply) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ListLessonsReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListLessonsReply) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *ListLessonsReply) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ListLessonsReply) GetDefaultCode() string {
	if x != nil {
		return x.DefaultCode
	}
	return ""
}

func (x *ListLessonsReply) GetAnswerCode() string {
	if x != nil {
		return x.AnswerCode
	}
	return ""
}

func (x *ListLessonsReply) GetTestCase() []*Case {
	if x != nil {
		return x.TestCase
	}
	return nil
}

func (x *ListLessonsReply) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetLessonRequest) Reset() {
	*x = GetLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonRequest) ProtoMessage() {}

func (x *GetLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonRequest.ProtoReflect.Descriptor instead.
func (*GetLessonRequest) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{4}
}

func (x *GetLessonRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetLessonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId         string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId       string  `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	SequenceNumber int64   `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Title          string  `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Introduction   string  `protobuf:"bytes,6,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Body           string  `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	DefaultCode    string  `protobuf:"bytes,8,opt,name=default_code,json=defaultCode,proto3" json:"default_code,omitempty"`
	AnswerCode     string  `protobuf:"bytes,9,opt,name=answer_code,json=answerCode,proto3" json:"answer_code,omitempty"`
	TestCase       []*Case `protobuf:"bytes,10,rep,name=test_case,json=testCase,proto3" json:"test_case,omitempty"`
	Language       string  `protobuf:"bytes,11,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetLessonReply) Reset() {
	*x = GetLessonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLessonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLessonReply) ProtoMessage() {}

func (x *GetLessonReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLessonReply.ProtoReflect.Descriptor instead.
func (*GetLessonReply) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{5}
}

func (x *GetLessonReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetLessonReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLessonReply) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *GetLessonReply) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *GetLessonReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetLessonReply) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *GetLessonReply) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *GetLessonReply) GetDefaultCode() string {
	if x != nil {
		return x.DefaultCode
	}
	return ""
}

func (x *GetLessonReply) GetAnswerCode() string {
	if x != nil {
		return x.AnswerCode
	}
	return ""
}

func (x *GetLessonReply) GetTestCase() []*Case {
	if x != nil {
		return x.TestCase
	}
	return nil
}

func (x *GetLessonReply) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type CreateLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token          string  `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	CourseId       string  `protobuf:"bytes,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	SequenceNumber int64   `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Title          string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Introduction   string  `protobuf:"bytes,5,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Body           string  `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	DefaultCode    string  `protobuf:"bytes,7,opt,name=default_code,json=defaultCode,proto3" json:"default_code,omitempty"`
	AnswerCode     string  `protobuf:"bytes,8,opt,name=answer_code,json=answerCode,proto3" json:"answer_code,omitempty"`
	TestCase       []*Case `protobuf:"bytes,9,rep,name=test_case,json=testCase,proto3" json:"test_case,omitempty"`
	Language       string  `protobuf:"bytes,10,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *CreateLessonRequest) Reset() {
	*x = CreateLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonRequest) ProtoMessage() {}

func (x *CreateLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonRequest.ProtoReflect.Descriptor instead.
func (*CreateLessonRequest) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{6}
}

func (x *CreateLessonRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateLessonRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *CreateLessonRequest) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *CreateLessonRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateLessonRequest) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CreateLessonRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CreateLessonRequest) GetDefaultCode() string {
	if x != nil {
		return x.DefaultCode
	}
	return ""
}

func (x *CreateLessonRequest) GetAnswerCode() string {
	if x != nil {
		return x.AnswerCode
	}
	return ""
}

func (x *CreateLessonRequest) GetTestCase() []*Case {
	if x != nil {
		return x.TestCase
	}
	return nil
}

func (x *CreateLessonRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type CreateLessonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId         string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId       string  `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	SequenceNumber int64   `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Title          string  `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Introduction   string  `protobuf:"bytes,6,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Body           string  `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	DefaultCode    string  `protobuf:"bytes,8,opt,name=default_code,json=defaultCode,proto3" json:"default_code,omitempty"`
	AnswerCode     string  `protobuf:"bytes,9,opt,name=answer_code,json=answerCode,proto3" json:"answer_code,omitempty"`
	TestCase       []*Case `protobuf:"bytes,10,rep,name=test_case,json=testCase,proto3" json:"test_case,omitempty"`
	Language       string  `protobuf:"bytes,11,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *CreateLessonReply) Reset() {
	*x = CreateLessonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLessonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonReply) ProtoMessage() {}

func (x *CreateLessonReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonReply.ProtoReflect.Descriptor instead.
func (*CreateLessonReply) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{7}
}

func (x *CreateLessonReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CreateLessonReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateLessonReply) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *CreateLessonReply) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *CreateLessonReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateLessonReply) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CreateLessonReply) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CreateLessonReply) GetDefaultCode() string {
	if x != nil {
		return x.DefaultCode
	}
	return ""
}

func (x *CreateLessonReply) GetAnswerCode() string {
	if x != nil {
		return x.AnswerCode
	}
	return ""
}

func (x *CreateLessonReply) GetTestCase() []*Case {
	if x != nil {
		return x.TestCase
	}
	return nil
}

func (x *CreateLessonReply) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type UpdateLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token          string        `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Uuid           string        `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId         string        `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId       string        `protobuf:"bytes,4,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	SequenceNumber int64         `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Title          string        `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Introduction   string        `protobuf:"bytes,7,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Body           string        `protobuf:"bytes,8,opt,name=body,proto3" json:"body,omitempty"`
	DefaultCode    string        `protobuf:"bytes,9,opt,name=default_code,json=defaultCode,proto3" json:"default_code,omitempty"`
	AnswerCode     string        `protobuf:"bytes,10,opt,name=answer_code,json=answerCode,proto3" json:"answer_code,omitempty"`
	TestCase       []*CaseWithID `protobuf:"bytes,11,rep,name=test_case,json=testCase,proto3" json:"test_case,omitempty"`
	Language       string        `protobuf:"bytes,12,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *UpdateLessonRequest) Reset() {
	*x = UpdateLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLessonRequest) ProtoMessage() {}

func (x *UpdateLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLessonRequest.ProtoReflect.Descriptor instead.
func (*UpdateLessonRequest) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateLessonRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdateLessonRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateLessonRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateLessonRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpdateLessonRequest) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *UpdateLessonRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateLessonRequest) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *UpdateLessonRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *UpdateLessonRequest) GetDefaultCode() string {
	if x != nil {
		return x.DefaultCode
	}
	return ""
}

func (x *UpdateLessonRequest) GetAnswerCode() string {
	if x != nil {
		return x.AnswerCode
	}
	return ""
}

func (x *UpdateLessonRequest) GetTestCase() []*CaseWithID {
	if x != nil {
		return x.TestCase
	}
	return nil
}

func (x *UpdateLessonRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type UpdateLessonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string        `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId         string        `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId       string        `protobuf:"bytes,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	SequenceNumber int64         `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Title          string        `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Introduction   string        `protobuf:"bytes,6,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Body           string        `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	DefaultCode    string        `protobuf:"bytes,8,opt,name=default_code,json=defaultCode,proto3" json:"default_code,omitempty"`
	AnswerCode     string        `protobuf:"bytes,9,opt,name=answer_code,json=answerCode,proto3" json:"answer_code,omitempty"`
	TestCase       []*CaseWithID `protobuf:"bytes,10,rep,name=test_case,json=testCase,proto3" json:"test_case,omitempty"`
	Language       string        `protobuf:"bytes,11,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *UpdateLessonReply) Reset() {
	*x = UpdateLessonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLessonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLessonReply) ProtoMessage() {}

func (x *UpdateLessonReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLessonReply.ProtoReflect.Descriptor instead.
func (*UpdateLessonReply) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateLessonReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateLessonReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateLessonReply) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpdateLessonReply) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *UpdateLessonReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateLessonReply) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *UpdateLessonReply) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *UpdateLessonReply) GetDefaultCode() string {
	if x != nil {
		return x.DefaultCode
	}
	return ""
}

func (x *UpdateLessonReply) GetAnswerCode() string {
	if x != nil {
		return x.AnswerCode
	}
	return ""
}

func (x *UpdateLessonReply) GetTestCase() []*CaseWithID {
	if x != nil {
		return x.TestCase
	}
	return nil
}

func (x *UpdateLessonReply) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type DeleteLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Uuid  string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DeleteLessonRequest) Reset() {
	*x = DeleteLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLessonRequest) ProtoMessage() {}

func (x *DeleteLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pkg_pb_lesson_lesson_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLessonRequest.ProtoReflect.Descriptor instead.
func (*DeleteLessonRequest) Descriptor() ([]byte, []int) {
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteLessonRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DeleteLessonRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_internal_pkg_pb_lesson_lesson_proto protoreflect.FileDescriptor

var file_internal_pkg_pb_lesson_lesson_proto_rawDesc = []byte{
	0x0a, 0x23, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x62, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x0a, 0x63, 0x61,
	0x73, 0x65, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x34, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x31, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0xde, 0x02, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63,
	0x61, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x26, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xdc, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a,
	0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x52, 0x08,
	0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x22, 0xca, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x52, 0x08, 0x74, 0x65, 0x73,
	0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x22, 0xdf, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x09,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x52, 0x08, 0x74,
	0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x22, 0xfd, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63,
	0x61, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x52, 0x08, 0x74,
	0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x22, 0xe5, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f,
	0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x32, 0xed, 0x02, 0x0a,
	0x06, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x3f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x43, 0x5a, 0x41,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x73, 0x75, 0x68, 0x61,
	0x2d, 0x61, 0x2f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_pkg_pb_lesson_lesson_proto_rawDescOnce sync.Once
	file_internal_pkg_pb_lesson_lesson_proto_rawDescData = file_internal_pkg_pb_lesson_lesson_proto_rawDesc
)

func file_internal_pkg_pb_lesson_lesson_proto_rawDescGZIP() []byte {
	file_internal_pkg_pb_lesson_lesson_proto_rawDescOnce.Do(func() {
		file_internal_pkg_pb_lesson_lesson_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_pkg_pb_lesson_lesson_proto_rawDescData)
	})
	return file_internal_pkg_pb_lesson_lesson_proto_rawDescData
}

var file_internal_pkg_pb_lesson_lesson_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_internal_pkg_pb_lesson_lesson_proto_goTypes = []interface{}{
	(*CaseWithID)(nil),          // 0: course.caseWithID
	(*Case)(nil),                // 1: course.case
	(*ListLessonsRequest)(nil),  // 2: course.ListLessonsRequest
	(*ListLessonsReply)(nil),    // 3: course.ListLessonsReply
	(*GetLessonRequest)(nil),    // 4: course.GetLessonRequest
	(*GetLessonReply)(nil),      // 5: course.GetLessonReply
	(*CreateLessonRequest)(nil), // 6: course.CreateLessonRequest
	(*CreateLessonReply)(nil),   // 7: course.CreateLessonReply
	(*UpdateLessonRequest)(nil), // 8: course.UpdateLessonRequest
	(*UpdateLessonReply)(nil),   // 9: course.UpdateLessonReply
	(*DeleteLessonRequest)(nil), // 10: course.DeleteLessonRequest
	(*empty.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_internal_pkg_pb_lesson_lesson_proto_depIdxs = []int32{
	1,  // 0: course.ListLessonsReply.test_case:type_name -> course.case
	1,  // 1: course.GetLessonReply.test_case:type_name -> course.case
	1,  // 2: course.CreateLessonRequest.test_case:type_name -> course.case
	1,  // 3: course.CreateLessonReply.test_case:type_name -> course.case
	0,  // 4: course.UpdateLessonRequest.test_case:type_name -> course.caseWithID
	0,  // 5: course.UpdateLessonReply.test_case:type_name -> course.caseWithID
	2,  // 6: course.Lesson.ListLessons:input_type -> course.ListLessonsRequest
	4,  // 7: course.Lesson.GetLesson:input_type -> course.GetLessonRequest
	6,  // 8: course.Lesson.CreateLesson:input_type -> course.CreateLessonRequest
	8,  // 9: course.Lesson.UpdateLesson:input_type -> course.UpdateLessonRequest
	10, // 10: course.Lesson.DeleteLesson:input_type -> course.DeleteLessonRequest
	3,  // 11: course.Lesson.ListLessons:output_type -> course.ListLessonsReply
	5,  // 12: course.Lesson.GetLesson:output_type -> course.GetLessonReply
	7,  // 13: course.Lesson.CreateLesson:output_type -> course.CreateLessonReply
	9,  // 14: course.Lesson.UpdateLesson:output_type -> course.UpdateLessonReply
	11, // 15: course.Lesson.DeleteLesson:output_type -> google.protobuf.Empty
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_internal_pkg_pb_lesson_lesson_proto_init() }
func file_internal_pkg_pb_lesson_lesson_proto_init() {
	if File_internal_pkg_pb_lesson_lesson_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseWithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Case); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLessonsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLessonsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLessonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLessonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLessonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pkg_pb_lesson_lesson_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_pkg_pb_lesson_lesson_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_pkg_pb_lesson_lesson_proto_goTypes,
		DependencyIndexes: file_internal_pkg_pb_lesson_lesson_proto_depIdxs,
		MessageInfos:      file_internal_pkg_pb_lesson_lesson_proto_msgTypes,
	}.Build()
	File_internal_pkg_pb_lesson_lesson_proto = out.File
	file_internal_pkg_pb_lesson_lesson_proto_rawDesc = nil
	file_internal_pkg_pb_lesson_lesson_proto_goTypes = nil
	file_internal_pkg_pb_lesson_lesson_proto_depIdxs = nil
}
